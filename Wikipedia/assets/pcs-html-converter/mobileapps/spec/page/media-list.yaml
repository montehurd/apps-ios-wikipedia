paths:
  # from routes/page/media.js 
  /{domain}/v1/page/media-list/{title}:
    get: &media-list_title_revision_get_spec
      tags:
        - Page content
      summary: Get information on media files used on a page.
      description: |
        Gets the media items (images, audio, and video) in the order in which they appear on a
        given wiki page.
      parameters:
        - $ref: '#/components/parameters/domainParam'
        - $ref: '#/components/parameters/title'
      responses:
        200:
          description: JSON containing metadata of media items appearing on the given page.
          content:
            application/json; charset=utf-8; profile="https://www.mediawiki.org/wiki/Specs/MediaList/1.0.1":
              schema:
                $ref: '#/components/schemas/media_list'
        default:
          description: Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/problem'
      x-amples:
        - title: Get media list from test page
          request:
            params:
              title: User:BSitzmann_(WMF)/MCS/Test/Frankenstein
          response:
            status: 200
            headers:
              content-type: application/json; charset=utf-8; profile="https://www.mediawiki.org/wiki/Specs/MediaList/1.1.0"
              content-language: en
              vary: /.+/
              etag: /^"[^/"]+/[^/"]+"$/
              access-control-allow-origin: '*'
              access-control-allow-headers: accept, x-requested-with, content-type
              content-security-policy: default-src
              x-content-security-policy: default-src
              x-frame-options: SAMEORIGIN
            body:
              revision: /.+/
              tid: /.+/
              items:
                - section_id: /.+/
                  type: /.+/
                  showInGallery: /.+/
  /{domain}/v1/page/media-list/{title}/{revision}:
    get:
      <<: *media-list_title_revision_get_spec
      parameters:
        - $ref: '#/components/parameters/domainParam'
        - $ref: '#/components/parameters/title'
        - name: revision
          in: path
          description: |
            Optional page revision. Note that older revisions are not stored, so request latency with the revision would be higher.
          required: true
          schema:
            type: integer
      x-monitor: false

components:
  schemas:
    media_list_with_metadata:
      type: object
      properties:
        revision:
          type: string
          description: the revision ID used to create the list
        tid:
          type: string
          description: the time uuid of the page rendering used to create the list
        items:
          type: array
          description: a list of media items
          items:
            $ref: '#/components/schemas/media_item_with_metadata'
      required:
        - revision
        - tid
        - items

    media_item_with_metadata:
      type: object
      properties:
        titles:
          $ref: '#/components/schemas/titles_set'
        thumbnail:
          type: object
          properties:
            source:
              type: string
              description: thumb URL
            width:
              type: integer
              description: thumb width
            height:
              type: integer
              description: thumb height
            mime:
              type: string
              description: thumb MIME type
        original:
          type: object
          properties:
            source:
              type: string
              description: original URL
            width:
              type: integer
              description: original width
            height:
              type: integer
              description: original height
            mime:
              type: string
              description: original MIME type
            size:
              type: integer
              description: the original file size in bytes (sizes are not provided
                for video derivatives)
        page_count:
          type: integer
          description: page count, if the item is a paged item (PDF, TIFF, DjVu, etc.)
        file_page:
          type: string
          description: Full URL to the file page for the item on Wikimedia Commons
        type:
          type: string
          enum:
            - image
            - video
            - audio
        caption:
          type: object
          properties:
            html:
              type: string
              description: on-wiki caption for the media item, including all HTML
                markup
            text:
              type: string
              description: plain text of the on-wiki caption for the media item
        start_time:
          type: number
          description: start time (if any) for the media item
        end_time:
          type: number
          description: end time (if any) for the media item
        duration:
          type: number
          description: the playback duration in seconds (for audio and video items)
        sources:
          type: array
          description: a list of derivatives of the original file (applies only to
            videos)
          items:
            type: object
            properties: {}
        artist:
          type: object
          description: structured info about the author of the media item
          properties:
            html:
              type: string
              description: HTML string describing the artist
            name:
              type: string
              description: the plain text artist name, if available
            user_page:
              type: string
              description: Wikimedia Commons user page for the artist, if available
          required:
            - html
        credit:
          $ref: '#/components/schemas/extmetadata_property'
        license:
          type: object
          description: license under which the media item is available on Wikimedia
            Commons
          properties:
            type:
              type: string
              description: license type
            url:
              type: string
              description: URL describing the terms and conditions of the license,
                if any
          required:
            - type
        license_url:
          type: string
          description: URL for the pertinent license
        description:
          type: object
          description: description of the image from Wikimedia Commons
          properties:
            html:
              type: string
              description: html image description
            text:
              type: string
              description: plain text image description
          required:
            - html
            - text
      required:
        - titles
        - file_page
        - type      
